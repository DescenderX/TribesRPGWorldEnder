//This file is part of Tribes RPG.//Tribes RPG server side scripts//General RPG scripts written by Jason "phantom" Daley,  Matthiew "JeremyIrons" Bouchard, and more (yet undetermined)//	Copyright (C) 2014  Jason Daley//	This program is free software: you can redistribute it and/or modify//	it under the terms of the GNU General Public License as published by//	the Free Software Foundation, either version 3 of the License, or//	(at your option) any later version.//	This program is distributed in the hope that it will be useful,//	but WITHOUT ANY WARRANTY; without even the implied warranty of//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//	GNU General Public License for more details.//	You should have received a copy of the GNU General Public License//	along with this program.  If not, see <http://www.gnu.org/licenses/>.//You may contact the author at beatme101@gmail.com or www.tribesrpg.org/contact.php//This GPL does not apply to Starsiege: Tribes or any non-RPG related files included.//Starsiege: Tribes, including the engine, retains a proprietary license forbidding resale.//________________________________________________________________________________________________________________________________________________________________// DescX Notes://		I've added GlassIdioms and minor bugfixes. The Belt was using global variables to perform counts//		that got trampled. Some functions have small additions to support World Ender features like Thirst.//		And, there are a lot of item definitions.//		Otherwise, Belt code remains largely untouched.function Belt::Initialize() {	$BeltItemNames = Array::New("", "BeltItemNames");	Array::Insert($BeltItemNames, "AmmoItems", 		0);	Array::Insert($BeltItemNames, "MiscItems", 		1);	Array::Insert($BeltItemNames, "PotionItems", 	2);	Array::Insert($BeltItemNames, "GlassIdioms", 	3);		$BeltItemDescription["AmmoItems"] 		= "Ammunition";	$BeltItemDescription["MiscItems"] 		= "Misc";	$BeltItemDescription["PotionItems"] 	= "Potions";	$BeltItemDescription["GlassIdioms"] 	= "Glass Idioms";		$belttypelist = "";	for(%x=0;%x<$Array::Size[$BeltItemNames];%x++) {		%beltCategory = Array::Get($BeltItemNames,%x);		if($BeltItemTypeCount[%beltCategory] <= 0)			$BeltItemTypeCount[%beltCategory] = 0;				if($belttypelist == "")			$belttypelist = %beltCategory;		else			$belttypelist = $belttypelist @ " " @ %beltCategory;	}}
function belt::checkmenus(%clientId){	%x = 0;	for(%i = 0; getWord($belttypelist, %i) != "" && getWord($belttypelist, %i) != -1; %i++)	{		%type = getword($belttypelist,%i);		%num = getword(Belt::GetNS(%clientid,%type),0);		if(%num > 0){			%x++;			%nf = %nf @ " " @ getWord($belttypelist, %i);		}	}	%nf = %x @ %nf;	return %nf;}

function MenuViewBelt(%clientId, %page, %victim){	%victim = confirmVictim(%clientId, %victim);	if(%victim == -1)		return;	$yourstats[%clientId] = True;	%title = "Belt Items - Weight " @ Belt::GetWeight(%clientid) @ "";	if(%victim != %clientId){		%victimName = rpg::getname(%victim);		%title = %victimName@"'s " @ %title;	}	Client::buildMenu(%clientId, %title, "ViewBelt", true);	%cnt = -1;	if(%victim == %clientId.currentInvSteal){		//%coins = fetchData(%victim, "COINS");		//Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @ "Steal Coins (has "@%coins@")", "stealcoins "@%victim);		if(!SkillCanUse(%clientId, "#pickpocket")){			Client::sendMessage(%TrueClientId, 0, "Note: Require 270 Stealing to steal items.");			return;		}	}	%optionsPerPage = 7;	if(%clientId.repack >= 18)		%optionsPerPage = 32;	%nx = 16;	%nf = belt::checkmenus(%victim);	%ns = GetWord(%nf,0);	%np = floor(%ns / %optionsPerPage);	%lb = (%page * %optionsPerPage) - (%optionsPerPage-1);	%ub = %lb + (%optionsPerPage-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%type = getword(%nf,%x);		if(%type == -1)			break;		%num = getword(Belt::GetNS(%victim,%type),0);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @ $BeltItemDescription[%type] @ " (" @ %num @ " kinds)", %type @ " " @ %victim);	}	if(%page == 1)	{		if(%ns > %optionsPerPage) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1);	}	else if(%page == 2)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1);	}}
function processMenuViewBelt(%clientId, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	if(%o == "page")	{		MenuViewBelt(%clientId, %p);		return;	}	%victim = %p;	if($BeltItemTypeCount[%o] > 0)	{		MenuBeltGear(%clientid, %o, 1, %victim);		return;	}
	if(%o != "done")		MenuViewBelt(%clientId, 1, %victim);	return;}
function MenuBeltGear(%clientid, %type, %page, %victim){	%victim = confirmVictim(%clientId, %victim);	if(%victim == -1)		return;	if(%victim != %clientId)		%victimName = rpg::getname(%victim);	%title = $BeltItemDescription[%type];	if(%victimName != "")		%title = %victimName@"'s " @ %title;	Client::buildMenu(%clientId, %title@":", "BeltGear", true);	%clientId.bulkNum = "";	%optionsPerPage = 6;	if(%clientId.repack >= 18)		%optionsPerPage = 30;	%nx = $BeltItemTypeCount[%type];	%nf = Belt::GetNS(%victim,%type);	%ns = GetWord(%nf,0);	%np = floor(%ns / %optionsPerPage);	%lb = (%page * %optionsPerPage) - (%optionsPerPage-1);	%ub = %lb + (%optionsPerPage-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%cnt = -1;
	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%item = getword(%nf,%x);		%amnt = Belt::HasThisStuff(%victim,%item);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @%amnt@" "@ $beltitem[%item, "Name"], %item @ " " @ %page @" "@%type@" "@%victim);	}	if(%page == 1)	{		if(%ns > %optionsPerPage) Client::addMenuItem(%victim, "]Next >>", "page " @ %page+1 @" "@%type@" "@%victim);		Client::addMenuItem(%clientId, "z<< Back", "back");	}	else if(%page == %np+1)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type@" "@%victim);	}	else	{		Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type@" "@%victim);		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type@" "@%victim);	}	return;}
function processMenuBeltGear(%clientid, %opt){	%o = GetWord(%opt, 0);	if(%o == "done")		return;	if(%o == "back"){		MenuViewBelt(%clientId, 1, GetWord(%opt, 1));		return;	}	%p = GetWord(%opt, 1);	%t = GetWord(%opt, 2);	%victim = GetWord(%opt, 3);	if(%o != "page")	{		if(%clientId.bulkNum < 1)			%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)			%clientId.bulkNum = 500;			MenuBeltDrop(%clientid, %o, %t, %victim);		return;	}	MenuBeltGear(%clientid, %t, %p, %victim);	return;}
function MenuBeltDrop(%clientid, %item, %type, %victim){	%victim = confirmVictim(%clientId, %victim);	if(%victim == -1)		return;	%cmnt = Belt::HasThisStuff(%victim,%item);	%name = $beltitem[%item, "Name"];	if(%victim != %clientId){		%victimName = rpg::getname(%victim);		if(%cmnt < 1){			Client::sendMessage(%clientId, $MsgWhite, %victimName@" doesn't have any "@%name);			return;		}	}	if(%cmnt < 1){		Client::sendMessage(%clientId, $MsgWhite, "you don't have any "@%name);		return;	}	if(%clientId.bulkNum == "")		%clientId.bulkNum = 1;	%amnt = %clientId.bulkNum;	%amnt = floor(%amnt);	if(%amnt > %cmnt)		%amnt = %cmnt;	Client::buildMenu(%clientId, %name@" ("@%cmnt@")", "BeltDrop", true);	if(%victimName != ""){		if(%victim == %clientId.currentInvSteal){			Client::addMenuItem(%clientId, %cnt++ @ "Steal 1 "@%item, %type@" steal "@%item@" 1 "@%victim);		}		Client::addMenuItem(%clientId, %cnt++ @ "Examine", %type@" examine "@%item@" "@ %amnt @" "@%victim);		Client::addMenuItem(%clientId, "z<< Back", %type@" back "@%victim);		return;	}
	if(%type == "AmmoItems"){		%list = GetAccessoryList(%clientId, 9, -1);		%curweap= player::getmounteditem(%clientId,$weaponslot);		if(String::findSubStr(%list, %curweap) != -1 && String::findSubStr($ProjRestrictions[%item], "," @ %curweap @ ",") != -1){			Client::addMenuItem(%clientId, %cnt++ @ "Equip to "@%curweap, %type@" arm "@%item);		}	}	else if(%type == "PotionItems")		Client::addMenuItem(%clientId, %cnt++ @ "Use", %type@" use "@%item);	else if(%type == "GlassIdioms")		Client::addMenuItem(%clientId, %cnt++ @ "Render", %type@" render "@%item);

	if(!($ItemDropFlags[%item] & $ItemDropNever)){
		Client::addMenuItem(%clientId, %cnt++ @ "Drop "@%amnt, %type@" drop "@%item@" "@%amnt);		if(%cmnt > 50 && %cmnt != %amnt)			Client::addMenuItem(%clientId, %cnt++ @ "Drop 50", %type@" dropb "@%item@" 50");		if(%cmnt <= 100 && %cmnt != %amnt)			Client::addMenuItem(%clientId, %cnt++ @ "Drop "@%cmnt, %type@" dropb "@%item@" "@%cmnt);		else if(%cmnt > 100 && %cmnt != %amnt){			Client::addMenuItem(%clientId, %cnt++ @ "Drop 100", %type@" dropb "@%item@" 100");			Client::addMenuItem(%clientId, %cnt++ @ "Drop "@%cmnt, %type@" dropb "@%item@" "@%cmnt);		}	}	Client::addMenuItem(%clientId, %cnt++ @ "Examine", %type@" examine "@%item);	Client::addMenuItem(%clientId, "z<< Back", %type@" back");	return;
}
function processMenuBeltDrop(%clientId, %opt, %keybind){	%type = GetWord(%opt, 0);	%option = GetWord(%opt, 1);	%item = GetWord(%opt, 2);	%amnt = GetWord(%opt, 3);	%amnt = floor(%amnt);	if(%amnt <= 0) %amnt = 1;	%victim = GetWord(%opt, 4);	if(isDead(%clientId))		return;	%clientId.tabMenuSpam++;	if(%clientId.tabMenuSpam > 20){		exploitBan(%clientId, "Item spam", 5);		return;	}	if(%option == "back")	{		MenuBeltGear(%clientId, %type, 1, %item);		return;	}	else if(%option == "examine")	{		WhatIs(%clientId, %item);		MenuBeltDrop(%clientid, %item, %type, %victim);		return;	}	if(%option == "dropb")		%clientId.bulkNum = %amnt;	if(%option == "breakb")		%clientId.bulkNum = %amnt;		if(%amnt != %clientId.bulkNum)	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuBeltDrop(%clientid, %item, %type);		return;	}	else if(%option == "steal")	{		startSteal(%clientId, %item);	}	else if(%option == "drop")	{		%cmnt = belt::hasthisstuff(%clientId,%item);		if(%amnt > %cmnt)			return;		if(($ItemDropFlags[%item] & $ItemDropNever))			return;		Belt::DropItem(%clientid,%item,%amnt,%type);		if(belt::hasthisstuff(%clientId, %item) > 0)			MenuBeltDrop(%clientid, %item, %type);	}	else if(%option == "dropb")	{			%cmnt = belt::hasthisstuff(%clientId,%item);			if(%amnt > %cmnt)				return;			Belt::DropItem(%clientid,%item,%amnt,%type);			if(belt::hasthisstuff(%clientId, %item) > 0){				%clientId.bulkNum = 1;				MenuBeltDrop(%clientid, %item, %type);			}	}
	else if(%option == "arm")	{		if(%type == "AmmoItems"){			%list = GetAccessoryList(%clientId, 9, -1);			%curweap= player::getmounteditem(%clientId,$weaponslot);			if(String::findSubStr(%list, %curweap) != -1 && String::findSubStr($ProjRestrictions[%item], "," @ %curweap @ ",") != -1){				storeData(%clientId, "LoadedProjectile " @ %curweap, %item);				Client::sendMessage(%clientId, $MsgBeige, rpg::EnglishItem(%item) @ " loaded as projectile for "@ %curweap @".");			}			else				Client::sendMessage(%clientId, $MsgRed, "This projectile cannot be loaded into the weapon you have equipped.");		}	}	else if(%option == "use")	{		%has = belt::hasthisstuff(%clientId, %item);		if(%has < 1)			return;		if($restoreValue[%item, HP] > 0 || $restoreValue[%item, HP] <= -1){			%hp = fetchData(%clientId, "HP");			refreshHP(%clientId, $restoreValue[%item, HP] * -0.01);			if(fetchData(%clientId, "HP") != %hp)				UseSkill(%clientId, $SkillVitality, True, True);			else				UseSkill(%clientId, $SkillVitality, False, True, 0.5);		}		if($restoreValue[%item, MP] > 0 || $restoreValue[%item, MP] <= -1){
			%mp = fetchData(%clientId, "MANA");			refreshMANA(%clientId, $restoreValue[%item, MP] * -1);
			if(fetchData(%clientId, "MP") != %mp)
				UseSkill(%clientId, $SkillEnergy, True, True);			else				UseSkill(%clientId, $SkillEnergy, False, True, 0.5);		}		if($restoreValue[%item, THIRST] > 0 || $restoreValue[%item, THIRST] <= -1){			%thirst = fetchData(%clientId, "Thirst");			if(%thirst > 600) 	storeData(%clientId, "Thirst", 600);			if(%thirst < -600) 	storeData(%clientId, "Thirst", -600);						%oldThrist = fetchData(%clientId, "Thirst");						storeData(%clientId, "Thirst", $restoreValue[%item, THIRST], "inc");			%thirst = fetchData(%clientId, "Thirst");			if(%thirst > 600) 	storeData(%clientId, "Thirst", 600);			if(%thirst < -600) 	storeData(%clientId, "Thirst", -600);			%thirst = fetchData(%clientId, "Thirst");						if(%oldThrist != %thirst)				UseSkill(%clientId, $SkillSurvival, True, True);			else				UseSkill(%clientId, $SkillSurvival, False, True, 0.5);		}		belt::takethisstuff(%clientId,%item, 1);		%has--;		Client::sendMessage(%clientId, $MsgWhite, "You used "@$beltitem[%item, "Name"]@". [have "@%has@"]");		refreshAll(%clientId);		if(!%keybind){			if(%has > 0)				MenuBeltDrop(%clientid, %item, %type);		}	}	else if(%option == "render")	{		%has = belt::hasthisstuff(%clientId, %item);		if(%has < 1)			return;		internalSay(%clientId, 0, "#render " @ %item);		refreshAll(%clientId);	}	%clientId.bulkNum = 1;	return;}

function belt::buildMainMenu(%clientId, %page){	%l = 6;	if(%clientId.repack >= 18)		%l = 31;	%nx = 15;	%nf = belt::checkmenus(%clientId);	%ns = GetWord(%nf,0);	%np = floor(%ns / %l);	%lb = (%page * %l) - (%l-1);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%curItem = -1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%type = getword(%nf,%x);		if(%type == -1)			break;		%num = getword(Belt::GetNS(%clientid,%type),0);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%curItem++,1) @ $BeltItemDescription[%type] @ " ("@%num@" kinds)", %type);	}	if(%page == 1)	{		if(%ns > %l) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1);	}	else if(%page == 2)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1);	}}

function MenuSellBelt(%clientId, %page){	Client::buildMenu(%clientId, "Belt sell:", "SellBelt", true);	if(%page == "")		%page = 1;	belt::buildMainMenu(%clientId, %page);	Client::addMenuItem(%clientId, "bBuy", "buy");	return;}

function processMenuSellBelt(%clientId, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	if(%o == "page")	{		MenuSellBelt(%clientId, %p);		return;	}	if($BeltItemTypeCount[%opt] > 0)	{		MenuSellBeltItem(%clientid, %opt, 1);		return;	}	if(%opt == "buy"){		MenuBuyBeltItem(%clientid, 1);		return;	}	else if(%opt != "done")		MenuSellBelt(%clientId);	return;}

function MenuSellBeltItem(%clientid, %type, %page){	%disp = $BeltItemDescription[%type];	Client::buildMenu(%clientId, %disp@" sell:", "SellBeltItem", true);	%clientId.bulkNum = "";	%l = 6;	%nx = $BeltItemTypeCount[%type];	%nf = Belt::GetNS(%clientid,%type);	%ns = GetWord(%nf,0);	%np = floor(%ns / %l);	%lb = (%page * %l) - (%l-1);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%item = getword(%nf,%x);		%amnt = Belt::HasThisStuff(%clientid,%item);		Client::addMenuItem(%clientId, %cnt++ @%amnt@" "@ $beltitem[%item, "Name"], %item @ " " @ %page @" "@%type);	}	if(%page == 1)	{		if(%ns > 6) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else if(%page == %np+1)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else	{		Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);	}	return;}

function MenuBuyBeltItem(%clientid, %page){	Client::buildMenu(%clientId, "Belt buy:", "BuyBeltItem", true);	%clientId.bulkNum = "";	%id = %clientId.beltShop;	%botname = %id.name;	%l = 6;	if(%clientId.repack >= 18)		%l = 31;	%info = $BotInfo[%botname, BELTSHOP];	if(%info != ""){		for(%i = 0; GetWord(%info, %i) != -1; %i++)		{			%a = GetWord(%info, %i);						%max = $numBeltItems;			for(%z = 0; %z < %max; %z++)			{				%item = $beltItemData[%z];								if(%a == %item) {					%nf = %nf @ " " @ %item;				}			}		}		%nf = %i @ " " @ %nf;	}	else		%nf = 0;	%ns = %i;//NUMBER OF ITEMS SOLD AT SHOP	%lb = (%page * %l) - (%l-1);	%np = floor(%ns / %l);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%cnt = -1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%item = getword(%nf,%x);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @ $beltitem[%item, "Name"], %item @ " " @ %page);	}	if(%page == 1)	{		if(%ns > %l) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1);		//Client::addMenuItem(%clientId, "xDone", "done");		Client::addMenuItem(%clientId, "sSell", "sell");	}	else if(%page == %np+1)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1);		Client::addMenuItem(%clientId, "sSell", "sell");	}	else	{		Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1);		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1);	}	return;}
function processMenuSellBeltItem(%clientid, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	%t = GetWord(%opt, 2);	if(%o != "page" && %o != "done")	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuSellBeltItemFinal(%clientid, %o, %t);		return;	}	if(%o != "done")		MenuSellBeltItem(%clientid, %t, %p);	return;}function processMenuBuyBeltItem(%clientid, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	if(%o == "sell")	{		Belt::Sell(%clientId,%clientId.beltShop, 1);		return;	}	if(%o != "page" && %o != "done")	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuBuyBeltItemFinal(%clientid, %o);		return;	}	if(%o != "done")		MenuBuyBeltItem(%clientid, %p);	return;}

function MenuSellBeltItemFinal(%clientid, %item, %type){	%name = $beltitem[%item, "Name"];	%amnt = %clientId.bulkNum;	%cmnt = Belt::HasThisStuff(%clientid,%item);	if(%amnt > %cmnt)		%amnt = %cmnt;	Client::buildMenu(%clientId, %name@" ("@%cmnt@")", "SellBeltItemFinal", true);	%cost = Belt::GetSellCost(%clientid,%item);	Client::addMenuItem(%clientId, %cnt++ @ "Sell "@%amnt@" for "@(%cost * %amnt)@" coins.", %type@" sell "@%item@" "@%amnt);	if(%cmnt != %amnt)		Client::addMenuItem(%clientId, %cnt++ @ "Sell "@%cmnt@" (all) for "@(%cost * %cmnt)@" coins.", %type@" sellall "@%item@" "@%cmnt);	Client::addMenuItem(%clientId, "zBack", %type@" back");	return;}

function MenuBuyBeltItemFinal(%clientid, %item){	%id = %clientId.beltShop;	%botname = %id.name;
	if(	String::findSubStr($BotInfo[%botname, BELTSHOP],%item) == -1 )		return;	%name = $beltitem[%item, "Name"];	%amnt = %clientId.bulkNum;	%cmnt = 100;	if(%amnt > %cmnt)		%amnt = %cmnt;	Client::buildMenu(%clientId, %name, "BuyBeltItemFinal", true);	%cost = getBuyCost(%clientId, %item);	Client::addMenuItem(%clientId, %cnt++ @ "Buy "@%amnt@" for "@(%cost * %amnt)@" coins.", "buy "@%item@" "@%amnt);	%cmnt = 10;	if(%cmnt != %amnt)		Client::addMenuItem(%clientId, %cnt++ @ "Buy "@%cmnt@" for "@(%cost * %cmnt)@" coins.", "buy "@%item@" "@%cmnt);	%cmnt = 25;	if(%cmnt != %amnt)		Client::addMenuItem(%clientId, %cnt++ @ "Buy "@%cmnt@" for "@(%cost * %cmnt)@" coins.", "buy "@%item@" "@%cmnt);	%cmnt = 50;	if(%cmnt != %amnt)		Client::addMenuItem(%clientId, %cnt++ @ "Buy "@%cmnt@" for "@(%cost * %cmnt)@" coins.", "buy "@%item@" "@%cmnt);	%cmnt = 100;	if(%cmnt != %amnt)		Client::addMenuItem(%clientId, %cnt++ @ "Buy "@%cmnt@" for "@(%cost * %cmnt)@" coins.", "buy "@%item@" "@%cmnt);	Client::addMenuItem(%clientId, "eExamine", "examine "@%item);	Client::addMenuItem(%clientId, "xCancel", "done");	Client::addMenuItem(%clientId, "bBack", "back");			remoteEval(%clientId, "setInfoLine", 1, %name@":");			%s = $SkillDesc[$SkillType[%item]];			if(%s != "")				remoteEval(%clientId, "setInfoLine", 3, "Skill Type: "@%s);			%w = GetAccessoryVar(%item, $Weight);			if(%w == "")				%w = 0;			remoteEval(%clientId, "setInfoLine", 4, "Weight: "@ RoundToFirstDecimal(%w));			remoteEval(%clientId, "setInfoLine", 5, "Restrictions: "@ rpg::ListAdjustedSkillRestrictions(%clientId, %item));			remoteEval(%clientId, "setInfoLine", 6, $AccessoryVar[%item, $MiscInfo]);	return;}

function processMenuBuyBeltItemFinal(%clientId, %opt){	%option = GetWord(%opt, 0);	%item = GetWord(%opt, 1);	%amnt = GetWord(%opt, 2);	%amnt = floor(%amnt);	if(%option == "done"){	}	else if(%option == "back"){		MenuBuyBeltItem(%clientid, 1);		return;	}	else if(%option == "examine"){		WhatIs(%clientId, %item);		MenuBuyBeltItemFinal(%clientid, %item);		return;	}	else if(%option == "buy")	{		if(%clientId.beltShop != "")		{			%clientPos = GameBase::getPosition(%clientId);			%botPos = GameBase::getPosition(%clientid.beltShop);			%dist = Vector::getDistance(%clientPos, %botPos);			if(%dist > 20)				return;			%id = %clientId.beltShop;			%botname = %id.name;			if(String::findSubStr($BotInfo[%botname, BELTSHOP],%item) == -1)				return;			%cost = getBuyCost(%clientid,%item) * %amnt;			%player = Client::getOwnedObject(%clientId);			if(checkResources(%player,%item,%cost,%clientId.bulkNum) && !IsDead(%clientId))			{				%name = $beltitem[%item, "Name"];				UseSkill(%clientId, $SkillWordsmith, True, True);				storeData(%clientId, "COINS", %cost, "dec");				Belt::GiveThisStuff(%clientid,%item,%amnt);				Client::SendMessage(%clientId, $MsgWhite, "You purchased "@%amnt@" "@%name@" for "@%cost@" coins.~wbuysellsound.wav");				RefreshAll(%clientId);				%clientId.bulkNum = 1;			}		}	}	%clientId.beltShop = "";	return;}

function processMenuSellBeltItemFinal(%clientId, %opt){	%type = GetWord(%opt, 0);	%option = GetWord(%opt, 1);	%item = GetWord(%opt, 2);	%amnt = GetWord(%opt, 3);	%amnt = floor(%amnt);	if(%opt == "done"){	}	else if(%option == "back"){		MenuSellBeltItem(%clientid, %type, 1);		return;	}	else if(%option == "sellall")	{		%clientPos = GameBase::getPosition(%clientId);		%botPos = GameBase::getPosition(%clientId.beltShop);		%dist = Vector::getDistance(%clientPos, %botPos);		if(%dist > 20)			return;		%itemCnt = belt::hasthisstuff(%clientId,%item);		if(%itemCnt != %amnt)			return;		%cost = Belt::GetSellCost(%clientid,%item) * %amnt;		UseSkill(%clientId, $SkillWordsmith, True, True);		storeData(%clientId, "COINS", %cost, "inc");		Belt::TakeThisStuff(%clientid,%item,%amnt);		Client::SendMessage(%clientId, $MsgWhite, "You received "@%cost@" coins.~wbuysellsound.wav");		RefreshAll(%clientId);		%clientId.bulkNum = 1;	}	else if(%clientId.bulkNum != %amnt)	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuSellBeltItemFinal(%clientid, %item, %type);	}	else if(%option == "sell")	{		%cmnt = Belt::HasThisStuff(%clientid,%item);		if(%cmnt >= %amnt)		{			%clientPos = GameBase::getPosition(%clientId);			%botPos = GameBase::getPosition(%clientId.beltShop);			%dist = Vector::getDistance(%clientPos, %botPos);			if(%dist > 20)				return;			%cost = Belt::GetSellCost(%clientid,%item) * %amnt;			UseSkill(%clientId, $SkillWordsmith, True, True);			storeData(%clientId, "COINS", %cost, "inc");			Belt::TakeThisStuff(%clientid,%item,%amnt);			Client::SendMessage(%clientId, $MsgWhite, "You received "@%cost@" coins.~wbuysellsound.wav");			RefreshAll(%clientId);			%clientId.bulkNum = 1;		}	}	return;}

//-----------------------------------------------------------------
function MenuStoreBelt(%clientId, %page){	Client::buildMenu(%clientId, "Belt store:", "StoreBelt", true);	if(%page == "")		%page = 1;	belt::buildMainMenu(%clientId, %page);	Client::addMenuItem(%clientid, "wWithdraw","withdraw");
}

function processMenuStoreBelt(%clientId, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	if(%o == "page")	{		MenuStoreBelt(%clientId, %p);		return;	}	if($BeltItemTypeCount[%opt] > 0)	{		MenuStoreBeltItem(%clientid, %opt, 1);		return;	}	if(%opt == "withdraw")	{		MenuWithdrawBelt(%clientId);		return;	}	if(%opt != "done")		MenuStoreBelt(%clientId);	return;}
function belt::checkbankmenus(%clientId){	%x = 0;	for(%i = 0; getWord($belttypelist, %i) != "" && getWord($belttypelist, %i) != -1; %i++)	{		%type = getword($belttypelist,%i);		%num = getword(Belt::BankGetNS(%clientid,%type),0);		if(%num > 0){			%x++;			%nf = %nf @ " " @ getWord($belttypelist, %i);		}	}	%nf = %x @ %nf;	return %nf;}
function belt::buildBankMenu(%clientId, %page){	%l = 6;	if(%clientId.repack >= 18)		%l = 31;	%nx = 15;	%nf = belt::checkbankmenus(%clientId);	%ns = GetWord(%nf,0);	%np = floor(%ns / %l);	%lb = (%page * %l) - (%l-1);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%curItem = -1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%type = getword(%nf,%x);		if(%type == -1)			break;		%num = getword(Belt::BankGetNS(%clientid,%type),0);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%curItem++,1) @ $BeltItemDescription[%type] @ " ("@%num@" kinds)", %type);	}	if(%page == 1)	{		if(%ns > %l) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1);	}	else if(%page == 2)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1);	}}
function MenuWithdrawBelt(%clientId, %page){	Client::buildMenu(%clientId, "Belt withdraw:", "WithdrawBelt", true);	if(%page == "")		%page = 1;	belt::buildBankMenu(%clientId, %page);	Client::addMenuItem(%clientid, "sStore","store");}
function processMenuWithdrawBelt(%clientId, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	if(%o == "page")	{		MenuWithdrawBelt(%clientId, %p);		return;	}	if($BeltItemTypeCount[%opt] > 0)	{		MenuWithdrawBeltItem(%clientid, %opt, 1);		return;	}	if(%opt == "store")	{		MenuStoreBelt(%clientId);		return;	}	if(%opt != "done")		MenuWithdrawBelt(%clientId);	return;}
function MenuStoreBeltItem(%clientid, %type, %page){	%disp = $BeltItemDescription[%type];	Client::buildMenu(%clientId, %disp@" store:", "StoreBeltItem", true);	%clientId.bulkNum = "";	%l = 6;	if(%clientId.repack >= 18)		%l = 30;	%nx = $BeltItemTypeCount[%type];	%nf = Belt::GetNS(%clientid,%type);	%ns = GetWord(%nf,0);	%np = floor(%ns / %l);	%lb = (%page * %l) - (%l-1);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%cnt = -1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%item = getword(%nf,%x);		%amnt = Belt::HasThisStuff(%clientid,%item);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @%amnt@" "@ $beltitem[%item, "Name"], %item @ " " @ %page @" "@%type);	}	if(%page == 1)	{		if(%ns > %l) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else if(%page == %np+1)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else	{		Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);	}	Client::addMenuItem(%clientId, "z<< Back", "back");	return;}
function processMenuStoreBeltItem(%clientid, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	%t = GetWord(%opt, 2);	if(%o == "done")		return;	if(%o == "back"){		MenuStoreBelt(%clientId);		return;	}	if(%o != "page")	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuStoreBeltItemFinal(%clientid, %o, %t);		return;	}	MenuStoreBeltItem(%clientid, %t, %p);	return;}
function MenuStoreBeltItemFinal(%clientid, %item, %type) {		%name = $beltitem[%item, "Name"];	%amnt = %clientId.bulkNum;	%cmnt = Belt::HasThisStuff(%clientid,%item);	if(%amnt > %cmnt)		%amnt = %cmnt;	Client::buildMenu(%clientId, %name@" ("@%cmnt@")", "StoreBeltItemFinal", true);	if(!($ItemDropFlags[%item] & $ItemDropNever)) {				Client::addMenuItem(%clientId, %cnt++ @ "Store "@%amnt, %type@" store "@%item@" "@%amnt);		if(%cmnt > 10)		Client::addMenuItem(%clientId, %cnt++ @ "Store 10", %type@" store "@%item@" 10");		if(%cmnt > 50)		Client::addMenuItem(%clientId, %cnt++ @ "Store 50", %type@" store "@%item@" 50");		if(%cmnt > 100)		Client::addMenuItem(%clientId, %cnt++ @ "Store 100", %type@" store "@%item@" 100");		if(%cmnt > 200)		Client::addMenuItem(%clientId, %cnt++ @ "Store 200", %type@" store "@%item@" 200");		if(%cmnt != %amnt)	Client::addMenuItem(%clientId, %cnt++ @ "Store "@%cmnt@" (all)", %type@" storeall "@%item@" "@%cmnt);		Client::addMenuItem(%clientId, "z<< Back", %type@" back");		} else {		Client::addMenuItem(%clientId, "z<< You cannot seal this item", %type@" back");	}	return;}

function processMenuStoreBeltItemFinal(%clientId, %opt){	%type = GetWord(%opt, 0);	%option = GetWord(%opt, 1);	%item = GetWord(%opt, 2);	%amnt = GetWord(%opt, 3);	if(%type == "done"){		return;	}	else if(%option == "back"){		MenuStoreBeltItem(%clientId, %type, 1);		return;	}	else if(%option == "storeall")	{		%cmnt = Belt::HasThisStuff(%clientid,%item);		if(%cmnt >= %amnt)		{			Client::SendMessage(%clientid,0,"You store "@%amnt@" "@$beltitem[%item, "Name"]@".");			Belt::TakeThisStuff(%clientid,%item,%amnt);			Belt::BankGiveThisSTuff(%clientid,%item,%amnt);			if(Belt::GetNS(%clientid,%type) != "0")				MenuStoreBeltItem(%clientId, %type, 1);			else				MenuStoreBelt(%clientId, 1);		}	}	else if(%option == "store")	{		%cmnt = Belt::HasThisStuff(%clientid,%item);		if(%cmnt >= %amnt)		{			Client::SendMessage(%clientid,0,"You store "@%amnt@" "@$beltitem[%item, "Name"]@".");			Belt::TakeThisStuff(%clientid,%item,%amnt);			Belt::BankGiveThisSTuff(%clientid,%item,%amnt);			if(%amnt < %cmnt)				MenuStoreBeltItemFinal(%clientid, %item, %type);			else if(Belt::GetNS(%clientid,%type) != "0")				MenuStoreBeltItem(%clientId, %type, 1);			else				MenuStoreBelt(%clientId, 1);		}	}	refreshWeight(%clientId);	return;}
//---------------------------function MenuWithdrawBeltItem(%clientid, %type, %page){	%disp = $BeltItemDescription[%type];	Client::buildMenu(%clientId, %disp@" withdraw:", "WithdrawBeltItem", true);	%clientId.bulkNum = "";	%l = 6;	if(%clientId.repack >= 18)		%l = 31;	%nx = $BeltItemTypeCount[%type];	%nf = Belt::BankGetNS(%clientid,%type);	%ns = GetWord(%nf,0);	%np = floor(%ns / %l);	%lb = (%page * %l) - (%l-1);	%ub = %lb + (%l-1);	if(%ub > %ns)		%ub = %ns;	%x = %lb - 1;	%cnt = -1;	for(%i = %lb; %i <= %ub; %i++)	{		%x++;		%item = getword(%nf,%x);		%amnt = Belt::BankHasThisStuff(%clientid,%item);		Client::addMenuItem(%clientId, string::getsubstr($menuChars,%cnt++,1) @%amnt@" "@ $beltitem[%item, "Name"], %item @ " " @ %page @" "@%type);	}	if(%page == 1)	{		if(%ns > %l) Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else if(%page == %np+1)	{		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);		Client::addMenuItem(%clientId, "xDone", "done");	}	else	{		Client::addMenuItem(%clientId, "]Next >>", "page " @ %page+1 @" "@%type);		Client::addMenuItem(%clientId, "[<< Prev", "page " @ %page-1 @" "@%type);	}	Client::addMenuItem(%clientId, "z<< Back", "back");	return;}function processMenuWithdrawBeltItem(%clientid, %opt){	%o = GetWord(%opt, 0);	%p = GetWord(%opt, 1);	%t = GetWord(%opt, 2);	if(%o == "done")		return;	if(%o == "back"){		MenuWithdrawBelt(%clientId);		return;	}	if(%o != "page")	{		if(%clientId.bulkNum < 1)	%clientId.bulkNum = 1;		if(%clientId.bulkNum > 500)	%clientId.bulkNum = 500;		MenuWithdrawBeltItemFinal(%clientid, %o, %t);	return;	}	MenuWithdrawBeltItem(%clientid, %t, %p);	return;}
function MenuWithdrawBeltItemFinal(%clientid, %item, %type){	%name = $beltitem[%item, "Name"];	%amnt = %clientId.bulkNum;	%cmnt = Belt::BankHasThisStuff(%clientid,%item);	if(%amnt > %cmnt)		%amnt = %cmnt;	Client::buildMenu(%clientId, %name@" ("@%cmnt@")", "WithdrawBeltItemFinal", true);	Client::addMenuItem(%clientId, %cnt++ @ "Withdraw "@%amnt, %type@" withdraw "@%item@" "@%amnt);	if(%cmnt >= 10)		Client::addMenuItem(%clientId, %cnt++ @ "Withdraw 10", %type@" withdraw "@%item@" 10");	if(%cmnt >= 50)		Client::addMenuItem(%clientId, %cnt++ @ "Withdraw 50", %type@" withdraw "@%item@" 50");	if(%cmnt >= 100)		Client::addMenuItem(%clientId, %cnt++ @ "Withdraw 100", %type@" withdraw "@%item@" 100");	if(%cmnt >= 200)		Client::addMenuItem(%clientId, %cnt++ @ "Withdraw 200", %type@" withdraw "@%item@" 200");	Client::addMenuItem(%clientId, %cnt++ @ "Withdraw all ("@%cmnt@")", %type@" withdrawall "@%item@" "@%amnt);	Client::addMenuItem(%clientId, "xCancel", "done");	Client::addMenuItem(%clientId, "z<< Back", %type@" back");	return;}
function processMenuWithdrawBeltItemFinal(%clientId, %opt){	%type = GetWord(%opt, 0);	%option = GetWord(%opt, 1);	%item = GetWord(%opt, 2);	%amnt = GetWord(%opt, 3);	if(%type == "done"){		return;	}	else if(%option == "back")	{		MenuWithdrawBeltItem(%clientid, %type, 1);	}	else if(%option == "withdrawall")	{		%amnt = Belt::BankHasThisStuff(%clientid,%item);		Client::SendMessage(%clientid,0,"You withdraw "@%amnt@" "@$beltitem[%item, "Name"]@".");		Belt::BankTakeThisSTuff(%clientid,%item,%amnt);		Belt::GiveThisStuff(%clientid,%item,%amnt);		MenuWithdrawBeltItem(%clientid, %type, 1);	}	else if(%option == "withdraw")	{		%cmnt = Belt::BankHasThisStuff(%clientid,%item);		if(%cmnt >= %amnt)		{			Client::SendMessage(%clientid,0,"You withdraw "@%amnt@" "@$beltitem[%item, "Name"]@".");			Belt::BankTakeThisSTuff(%clientid,%item,%amnt);			Belt::GiveThisStuff(%clientid,%item,%amnt);			if(%cmnt == %amnt)				MenuWithdrawBeltItem(%clientid, %type, 1);			else				MenuWithdrawBeltItemFinal(%clientid, %item, %type);		}	}	return;}// ------------------- //// Non Menu Functions  //// ------------------- //function Belt::GetSellCost(%clientid,%item){	%p = $HardcodedItemCost[%item];	%cost = round(%p * ($resalePercentage/100));	%p = round($PlayerSkill[%clientId, $SkillWordsmith] / 11) / 100;	%x = round(%cost * Cap(%p, 0.0, 1.0) );	%cost += %x;	return %cost;}function Belt::Mug(%clientid,%id){	Client::SendMessage(%clientid,1,"#mugbelt");}function Belt::Sell(%clientid,%npc, %silent){	if(!%silent)		AI::sayLater(%clientid, %npc, "What would you like to sell?", True);	MenuSellBelt(%clientId);}function Belt::Store(%clientid,%npc,%page){	AI::sayLater(%clientid, %npc, "This is the equipment you have stored from your belt.", True);	MenuStoreBelt(%clientid,%page);}
function Belt::GetWeight(%clientid){	%list[1] = "AmmoItems";	%list[2] = "MiscItems";	%list[3] = "PotionItems";
	%list[4] = "GlassIdioms";
		for(%s=1;%list[%s] != "";%s++)	{		%type = %list[%s];		for(%i=0;%i<=$BeltItemTypeCount[%type];%i++)		{			%item = $beltitem[%i, "Num", %type];			%amnt = Belt::HasThisStuff(%clientid,%item);			%weig = $AccessoryVar[%item, $Weight];			%total += %amnt * %weig;		}	}	return RoundToFirstDecimal(%total);}function Belt::DropItem(%clientid,%item,%amnt,%type){	%chk = Belt::HasThisStuff(%clientid,%item);	if(%chk >= %amnt)	{		Belt::TakeThisStuff(%clientid,%item,%amnt);		TossLootbag(%clientId, %item@" "@%amnt, 8, "*", 0, 1);		refreshWeight(%clientId);	}}function Belt::GetNS(%clientid,%type){	%bn = 0;	%num = $BeltItemTypeCount[%type];	for(%i;%i<=%num;%i++)	{		%item = $beltitem[%i, "Num", %type];		%amnt = Belt::HasThisStuff(%clientid,%item);		if(%amnt > 0) {			%list = %list @" "@%item;			%bn++;		}	}	return %bn@%list;}
function BeltItem::Add(%name,%item,%type,%weight,%cost,%miscInfo,%specialDropFlags) {	if($beltItemReaddCheck[%item] == "") {			// Check for double-adds.		$beltItemData[$numBeltItems] = %item;				$numBeltItems++;		%num = $BeltItemTypeCount[%type]++;			// Only increase counters when we aren't replacing an existing item		$beltItemReaddCheck[%item] = %num;	} else {		%num = $beltItemReaddCheck[%item];	}	$beltitem[%num, "Num", %type] = %item;		$beltitem[%item, "Item"] = %item;	$beltitem[%item, "Name"] = %name;	$beltitem[%item, "Type"] = %type;	$AccessoryVar[%item, $Weight] = %weight;	$HardcodedItemCost[%item] = floor(%cost);		// Floor the cost, floating point issues make pennies moot anyway	$ItemCost[%item] = $HardcodedItemCost[%item];	if(%miscInfo != "")		$AccessoryVar[%item, $MiscInfo] = %miscInfo;	$ItemDropFlags[%item] = %specialDropFlags;}function Belt::HasThisStuff(%clientid,%item){	%item = $beltitem[%item, "Item"];	%type = $beltitem[%item, "Type"];	%list = fetchdata(%clientid,%type);	%amnt = Belt::ItemCount(%item,%list);	return %amnt;}
function Belt::GiveThisStuff(%clientid, %item, %amnt, %echo){	%amnt = floor(%amnt);	if(%amnt > 0)	{		%item = $beltitem[%item, "Item"];		%type = $beltitem[%item, "Type"];		%list = fetchdata(%clientid,%type);		%count = Belt::ItemCount(%item,%list);		if(%echo)			Client::sendMessage(%clientId, 0, "You received " @ %amnt @ " " @ $beltitem[%item, "Name"] @". " @ "[" @ $BeltItemDescription[$beltitem[%item, "Type"]] @ ", have "@(%count+%amnt)@"]");		if(%count > 0)		{			%list = Belt::RemoveFromList(%list, %item@" "@%count);			%amnt = %amnt + %count;		}		%list = Belt::AddToList(%list, %item@" "@%amnt);		Storedata(%clientid,%type,%list);		refreshWeight(%clientId);	}}
function Belt::TakeThisStuff(%clientid,%item,%amnt){	%amnt = floor(%amnt);	if(%amnt > 0)	{		%item = $beltitem[%item, "Item"];		%type = $beltitem[%item, "Type"];		%list = fetchdata(%clientid,%type);		%count = Belt::ItemCount(%item,%list);		%amnt = %count - %amnt;		%list = Belt::RemoveFromList(%list, %item@" "@%count);		if(%amnt > 0)	%list = Belt::AddToList(%list, %item@" "@%amnt);		Storedata(%clientid,%type,%list);	}}
function isBeltItem(%item){	%flag = false;	if((String::ICompare($beltitem[%item, "Item"], %item) == 0))		%flag = True; 	return %flag;}function Belt::ItemCount(%item,%list){	%count = 0;	for(%i=0;(%w = getword(%list,%i)) != -1;%i+=2)	{		if(%w == %item)		{			%count = getword(%list,%i+1);			break;		}	}	return %count;}function Belt::HasItemNamed(%client, %itemName){		%count = 0;	for(%ii=0;(%type = getword($belttypelist,%ii)) != -1;%ii++)	{		%list = fetchData(%client,%type);		for(%i=0;(%w = getword(%list,%i)) != -1;%i+=2)		{			if(string::icompare(%itemName, $beltitem[%w, "Name"]) == 0)			{				%count = getword(%list,%i+1);				return %w@" "@%count;			}		}	}	return false;}
function Belt::AddToList(%list, %item){	%list = %list @ %item @ " ";	return %list;}function Belt::RemoveFromList(%list, %item){	%a = " " @ %list;	%a = String::replace(%a, " " @ %item @ " ", " ");	%list = String::NEWgetSubStr(%a, 1, 99999);	return %list;}function Belt::IsInList(%list, %item){	%a = " " @ %list;	if(String::findSubStr(%a, " " @ %item @ " ") != -1)		return True;	else		return False;}function Belt::BankStorageConversion(%clientid){	%bank =  fetchData(%clientId, "BankStorage");	for(%i=0;getword(%bank,%i)!=-1;%i++)	{		%a = getword(%bank,%i);		%b = getword(%bank,%i++);		if(IsBeltItem(%a))			Belt::BankGiveThisStuff(%clientid, %a, %b);		else			%banklist = %banklist@%a@" "@%b@" ";	}	storeData(%clientId, "BankStorage", " "@%banklist);}
function Belt::BankGiveThisStuff(%clientid, %item, %amnt){	if(%amnt > 0)	{		%item = $beltitem[%item, "Item"];		%type = $beltitem[%item, "Type"];		%list = fetchdata(%clientid,"Bank"@%type);		%count = Belt::ItemCount(%item,%list);		if(%count > 0)		{			%list = Belt::RemoveFromList(%list, %item@" "@%count);			%amnt = %amnt + %count;		}		%list = Belt::AddToList(%list, %item@" "@%amnt);		Storedata(%clientid,"Bank"@%type,%list);	}}function Belt::BankTakeThisStuff(%clientid,%item,%amnt){	if(%amnt > 0)	{		%item = $beltitem[%item, "Item"];		%type = $beltitem[%item, "Type"];		%list = fetchdata(%clientid,"Bank"@%type);		%count = Belt::ItemCount(%item,%list);		%amnt = %count - %amnt;		%list = Belt::RemoveFromList(%list, %item@" "@%count);		if(%amnt > 0)	%list = Belt::AddToList(%list, %item@" "@%amnt);		Storedata(%clientid,"Bank"@%type,%list);	}}
function Belt::BankHasThisStuff(%clientid,%item){	%item = $beltitem[%item, "Item"];	%type = $beltitem[%item, "Type"];	%list = fetchdata(%clientid,"Bank"@%type);	%amnt = Belt::ItemCount(%item,%list);		return %amnt;}function Belt::BankGetNS(%clientid,%type){	%bn = 0;	%num = $BeltItemTypeCount[%type];	for(%i;%i<=%num;%i++)	{		%item = $beltitem[%i, "Num", %type];		%amnt = Belt::BankHasThisStuff(%clientid,%item);		if(%amnt > 0) {			%list = %list @" "@%item;			%bn++;		}	}	return %bn@%list;}
function Belt::GetDeathItems(%clientid, %killerId){	%tmploot = "";		for(%x=0;%x<$Array::Size[$BeltItemNames];%x++) {		%beltCategory 	= Array::Get($BeltItemNames,%x);		%tmploot 		= %tmploot @ fetchdata(%clientid,%beltCategory);		if(String::len(%tmploot) > 200) {			if(Player::isAiControlled(%clientId)) {				%tmploot = rpg::ApplyLuckFactorToDropList(%clientId, %killerid, %tmploot);				TossLootbag(%clientId, %tmploot, 1, "*", 300);			} else {				for(%i=0;getword(%tmploot,%i)!=-1;%i++) {					%item = getword(%tmploot,%i);					%count = getword(%tmploot,%i++);					%amt = rpg::GetItemListCount(fetchData(%clientId, "Bank" @ %beltCategory), %item);					storeData(%clientId, "Bank" @ %beltCategory, 								rpg::ModifyItemList(fetchData(%clientId, "Bank" @ %beltCategory), %item, %amt + %count));					Belt::TakeThisStuff(%clientid, %item, %count);					}			}			%tmploot = "";		}	}
		if(%tmploot != "") {		for(%i=0;getword(%tmploot,%i)!=-1;%i++) {			%item 	= getword(%tmploot,%i);			%count 	= getword(%tmploot,%i++);			%type 	= $beltitem[%item, "Type"];			if(Player::isAiControlled(%clientId)) {				if(!($ItemDropFlags[%item] & $ItemDropStealProof) && !($ItemDropFlags[%item] & $ItemDropNever)) {					Belt::TakeThisStuff(%clientid, %item, %count);						} else {					%ba = Belt::RemoveFromList(%tmploot, %item @ " " @ %count);					%tmploot = %item @ " " @ %count;					%i-=2;				}			} else {				%amt = rpg::GetItemListCount(fetchData(%clientId, "Bank" @ %type), %item);				storeData(%clientId, "Bank" @ %type, 							rpg::ModifyItemList(fetchData(%clientId, "Bank" @ %type), %item, %amt + %count));				Belt::TakeThisStuff(%clientid, %item, %count);				}		}		if(!Player::isAiControlled(%clientId)) {			%tmploot = "";		}	}		if(%tmploot == "")		%tmploot = " ";	return %tmploot;}
